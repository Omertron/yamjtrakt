/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.omertron.yamjtrakttv.view;

import com.jakewharton.trakt.entities.Movie;
import com.jakewharton.trakt.entities.TvEntity;
import com.jakewharton.trakt.entities.TvShow;
import com.omertron.yamjtrakttv.YamjTraktApp;
import com.omertron.yamjtrakttv.model.Episode;
import com.omertron.yamjtrakttv.model.Video;
import com.omertron.yamjtrakttv.tools.ParseCompleteMovies;
import com.omertron.yamjtrakttv.tools.TraktTools;
import java.awt.Dimension;
import java.awt.Point;
import java.io.File;
import java.util.Map;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.lang3.StringUtils;
import org.apache.log4j.Logger;

/**
 *
 * @author Stuart
 */
public class MainWindow extends javax.swing.JFrame {

    private static final Logger logger = Logger.getLogger(MainWindow.class);
//    private static final String DEFAULT_DIRECTORY = "C:/Documents and Settings/stuart.boston/My Documents/Dropbox/YAMJ/NetBeans/YamjTraktTv/samples";
    private static final String DEFAULT_DIRECTORY = "C:/Users/Stuart/Dropbox/YAMJ/NetBeans/YamjTraktTv/samples";
    private DefaultTableModel model;

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();

        int mwWidth = btnExit.getSize().width + btnExit.getLocation().x + 20;
        int mwHeight = btnExit.getSize().height + btnExit.getLocation().y + 70;

        this.setSize(mwWidth, mwHeight);


//        String col[] = {"Season", "Episode", "Title"};
//        String data[][][] = {};
//        model = new DefaultTableModel(data, col);
//        tblEpisodes = new JTable(model);
    }

    private void updateCredentials() {
        YamjTraktApp.getCredentials().setUsername(txtCredUsername.getText());
        YamjTraktApp.getCredentials().setPassword(new String(pwdCredPassword.getPassword()));
        YamjTraktApp.getCredentials().setApikey(txtCredApikey.getText());
    }

    private void validateCredentials() {
        updateCredentials();
        TraktTools.initialise(YamjTraktApp.getCredentials());
        lblCredResponse.setText(YamjTraktApp.getCredentials().getValidMessage());

        btnCredSave.setEnabled(YamjTraktApp.getCredentials().isValid());
    }

    private void updateButtons() {
        btnLoadFile.setEnabled(YamjTraktApp.isCompleteMoviesLoaded());
        btnProcess.setEnabled(YamjTraktApp.isCompleteMoviesProcessed() && YamjTraktApp.getCredentials().isValid());
        updateLibraryStats(YamjTraktApp.getLibrary().getStats());
    }

    /*
     * Control the progress window
     */
    public void progestSetTitle(String progressTitle) {
        lblProgressTitle.setText(progressTitle);
    }

    public void progressAddText(String progressText) {
        taProgress.append(progressText);
        taProgress.append("\n");
        taProgress.setCaretPosition(taProgress.getDocument().getLength());
        logger.debug(progressText);
    }

    public void progressClearText() {
        taProgress.setText("");
    }

    public void progressBarLimits(int min, int max) {
        pbProgress.setMinimum(min);
        pbProgress.setMaximum(max);
        pbProgress.setValue(min);
    }

    public void progressBarProgress(int progress) {
        pbProgress.setValue(progress);
    }

    public void updateLibraryStats(String updateText) {
        txtLibraryStats.setText(updateText);
    }

    public void updateVideoWindow(Video video) {
        txtVideoTitle.setText(video.getTitle());
        txtVideoYear.setText(String.valueOf(video.getYear()));
        txtVideoType.setText(video.getType());

        chkWatched.setSelected(video.isWatched());
        if (video.isWatched()) {
            txtVideoWatchedDate.setText(video.getWatchedDate().toString());
        } else {
            txtVideoWatchedDate.setText("");
        }

        // Episode information? Table?
        model.setRowCount(0);
        if (video.isTvshow()) {
            logger.info("Setting row count to " + video.getEpisodes().size());
            model.setRowCount(video.getEpisodes().size());
            for (Episode episode : video.getEpisodes()) {
                logger.info("Adding " + episode.getSeason() + " " + episode.getEpisode());
                model.insertRow(0, new Object[]{episode.getSeason(), episode.getEpisode(), ""});
            }
        }
        // Poster
        lblVideoPosterImage.setText("No poster");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        dlgCredentials = new javax.swing.JDialog();
        lblCredUsername = new javax.swing.JLabel();
        lblCredPassword = new javax.swing.JLabel();
        lblCredApikey = new javax.swing.JLabel();
        txtCredUsername = new javax.swing.JTextField();
        txtCredApikey = new javax.swing.JTextField();
        pwdCredPassword = new javax.swing.JPasswordField();
        btnCredOk = new javax.swing.JButton();
        btnCredTest = new javax.swing.JButton();
        lblCredlogo = new javax.swing.JLabel();
        lblCredResponse = new javax.swing.JLabel();
        btnCredLoad = new javax.swing.JButton();
        btnCredSave = new javax.swing.JButton();
        fraProgress = new javax.swing.JFrame();
        pbProgress = new javax.swing.JProgressBar();
        btnProgressOK = new javax.swing.JButton();
        spProgress = new javax.swing.JScrollPane();
        taProgress = new javax.swing.JTextArea();
        lblProgressTitle = new javax.swing.JLabel();
        dlgVideo = new javax.swing.JDialog();
        txtVideoTitle = new javax.swing.JTextField();
        txtVideoYear = new javax.swing.JTextField();
        txtVideoType = new javax.swing.JTextField();
        txtVideoWatchedDate = new javax.swing.JTextField();
        chkWatched = new javax.swing.JCheckBox();
        lblVideoPosterImage = new javax.swing.JLabel();
        scrEpisodes = new javax.swing.JScrollPane();
        tblEpisodes = new javax.swing.JTable();
        btnBrowse = new javax.swing.JButton();
        txtCompleteMoviesPath = new javax.swing.JTextField();
        btnLoadFile = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        txtLibraryStats = new javax.swing.JTextField();
        lbllogo = new javax.swing.JLabel();
        btnCredentials = new javax.swing.JButton();
        btnProcess = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        mnuBar = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        mnuFileCredentials = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mnuFileExit = new javax.swing.JMenuItem();
        mnuHelp = new javax.swing.JMenu();
        mnuHelpAbout = new javax.swing.JMenuItem();
        mnuHelpDonate = new javax.swing.JMenuItem();

        dlgCredentials.setMinimumSize(new java.awt.Dimension(400, 350));
        dlgCredentials.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        dlgCredentials.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        dlgCredentials.setName("Credentials");
        dlgCredentials.setResizable(false);

        lblCredUsername.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblCredUsername.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCredUsername.setText("Username");
        lblCredUsername.setMaximumSize(new java.awt.Dimension(60, 20));
        lblCredUsername.setMinimumSize(new java.awt.Dimension(60, 20));
        lblCredUsername.setPreferredSize(new java.awt.Dimension(60, 20));

        lblCredPassword.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblCredPassword.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCredPassword.setText("Password");
        lblCredPassword.setMaximumSize(new java.awt.Dimension(60, 20));
        lblCredPassword.setMinimumSize(new java.awt.Dimension(60, 20));
        lblCredPassword.setPreferredSize(new java.awt.Dimension(60, 20));

        lblCredApikey.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblCredApikey.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCredApikey.setText("API Key");
        lblCredApikey.setMaximumSize(new java.awt.Dimension(60, 20));
        lblCredApikey.setMinimumSize(new java.awt.Dimension(60, 20));
        lblCredApikey.setPreferredSize(new java.awt.Dimension(60, 20));

        txtCredUsername.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtCredUsername.setMinimumSize(new java.awt.Dimension(300, 25));
        txtCredUsername.setPreferredSize(new java.awt.Dimension(300, 25));

        txtCredApikey.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtCredApikey.setMinimumSize(new java.awt.Dimension(300, 25));
        txtCredApikey.setPreferredSize(new java.awt.Dimension(300, 25));

        pwdCredPassword.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        pwdCredPassword.setMinimumSize(new java.awt.Dimension(300, 25));
        pwdCredPassword.setPreferredSize(new java.awt.Dimension(300, 25));

        btnCredOk.setText("OK");
        btnCredOk.setMaximumSize(new java.awt.Dimension(75, 25));
        btnCredOk.setMinimumSize(new java.awt.Dimension(75, 25));
        btnCredOk.setPreferredSize(new java.awt.Dimension(75, 25));
        btnCredOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCredOkActionPerformed(evt);
            }
        });

        btnCredTest.setText("Validate");
        btnCredTest.setMaximumSize(new java.awt.Dimension(75, 25));
        btnCredTest.setMinimumSize(new java.awt.Dimension(75, 25));
        btnCredTest.setPreferredSize(new java.awt.Dimension(75, 25));
        btnCredTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCredTestActionPerformed(evt);
            }
        });

        lblCredlogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/YAMJ.png"))); // NOI18N

        lblCredResponse.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblCredResponse.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCredResponse.setText("Please validate the credentials");

        btnCredLoad.setText("Load");
        btnCredLoad.setMaximumSize(new java.awt.Dimension(75, 25));
        btnCredLoad.setMinimumSize(new java.awt.Dimension(75, 25));
        btnCredLoad.setPreferredSize(new java.awt.Dimension(75, 25));
        btnCredLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCredLoadActionPerformed(evt);
            }
        });

        btnCredSave.setText("Save");
        btnCredSave.setEnabled(false);
        btnCredSave.setMaximumSize(new java.awt.Dimension(75, 25));
        btnCredSave.setMinimumSize(new java.awt.Dimension(75, 25));
        btnCredSave.setPreferredSize(new java.awt.Dimension(75, 25));
        btnCredSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCredSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dlgCredentialsLayout = new javax.swing.GroupLayout(dlgCredentials.getContentPane());
        dlgCredentials.getContentPane().setLayout(dlgCredentialsLayout);
        dlgCredentialsLayout.setHorizontalGroup(
            dlgCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgCredentialsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dlgCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dlgCredentialsLayout.createSequentialGroup()
                        .addComponent(btnCredTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCredLoad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCredSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCredOk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dlgCredentialsLayout.createSequentialGroup()
                        .addGroup(dlgCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, dlgCredentialsLayout.createSequentialGroup()
                                .addComponent(lblCredUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCredUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, dlgCredentialsLayout.createSequentialGroup()
                                .addComponent(lblCredPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pwdCredPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, dlgCredentialsLayout.createSequentialGroup()
                                .addComponent(lblCredApikey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCredApikey, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lblCredlogo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 1, Short.MAX_VALUE))
                    .addComponent(lblCredResponse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        dlgCredentialsLayout.setVerticalGroup(
            dlgCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgCredentialsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCredlogo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dlgCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCredUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCredUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dlgCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCredPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pwdCredPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dlgCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCredApikey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCredApikey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblCredResponse)
                .addGap(18, 18, 18)
                .addGroup(dlgCredentialsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCredTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCredLoad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCredSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCredOk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        fraProgress.setMinimumSize(new java.awt.Dimension(650, 300));

        pbProgress.setMaximumSize(new java.awt.Dimension(146, 25));
        pbProgress.setMinimumSize(new java.awt.Dimension(146, 25));
        pbProgress.setPreferredSize(new java.awt.Dimension(146, 25));

        btnProgressOK.setText("OK");
        btnProgressOK.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnProgressOK.setMaximumSize(new java.awt.Dimension(75, 25));
        btnProgressOK.setMinimumSize(new java.awt.Dimension(75, 25));
        btnProgressOK.setPreferredSize(new java.awt.Dimension(75, 25));
        btnProgressOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProgressOKActionPerformed(evt);
            }
        });

        spProgress.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        spProgress.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        spProgress.setAutoscrolls(true);

        taProgress.setColumns(132);
        taProgress.setEditable(false);
        taProgress.setLineWrap(true);
        taProgress.setRows(5000);
        taProgress.setTabSize(4);
        taProgress.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        taProgress.setFocusable(false);
        taProgress.setMinimumSize(new java.awt.Dimension(650, 94));
        spProgress.setViewportView(taProgress);

        lblProgressTitle.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblProgressTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblProgressTitle.setText("Title");

        javax.swing.GroupLayout fraProgressLayout = new javax.swing.GroupLayout(fraProgress.getContentPane());
        fraProgress.getContentPane().setLayout(fraProgressLayout);
        fraProgressLayout.setHorizontalGroup(
            fraProgressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fraProgressLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fraProgressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fraProgressLayout.createSequentialGroup()
                        .addComponent(pbProgress, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnProgressOK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(spProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(lblProgressTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        fraProgressLayout.setVerticalGroup(
            fraProgressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fraProgressLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblProgressTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spProgress, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(fraProgressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnProgressOK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pbProgress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        dlgVideo.setMinimumSize(new java.awt.Dimension(542, 322));

        txtVideoTitle.setEditable(false);
        txtVideoTitle.setText("title");
        txtVideoTitle.setFocusable(false);

        txtVideoYear.setEditable(false);
        txtVideoYear.setText("year");

        txtVideoType.setEditable(false);
        txtVideoType.setText("Type");

        txtVideoWatchedDate.setEditable(false);
        txtVideoWatchedDate.setText("Watched Date");
        txtVideoWatchedDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVideoWatchedDateActionPerformed(evt);
            }
        });

        chkWatched.setText("Watched");

        lblVideoPosterImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblVideoPosterImage.setText("PosterImage");
        lblVideoPosterImage.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblVideoPosterImage.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblVideoPosterImage.setMaximumSize(new java.awt.Dimension(200, 300));
        lblVideoPosterImage.setMinimumSize(new java.awt.Dimension(200, 300));
        lblVideoPosterImage.setPreferredSize(new java.awt.Dimension(200, 300));

        tblEpisodes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Season", "Episode", "Title"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEpisodes.getTableHeader().setReorderingAllowed(false);
        scrEpisodes.setViewportView(tblEpisodes);
        tblEpisodes.getColumnModel().getColumn(0).setMinWidth(50);
        tblEpisodes.getColumnModel().getColumn(0).setPreferredWidth(50);
        tblEpisodes.getColumnModel().getColumn(0).setMaxWidth(50);
        tblEpisodes.getColumnModel().getColumn(1).setMinWidth(50);
        tblEpisodes.getColumnModel().getColumn(1).setPreferredWidth(50);
        tblEpisodes.getColumnModel().getColumn(1).setMaxWidth(50);

        javax.swing.GroupLayout dlgVideoLayout = new javax.swing.GroupLayout(dlgVideo.getContentPane());
        dlgVideo.getContentPane().setLayout(dlgVideoLayout);
        dlgVideoLayout.setHorizontalGroup(
            dlgVideoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgVideoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dlgVideoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dlgVideoLayout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(chkWatched)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtVideoWatchedDate, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dlgVideoLayout.createSequentialGroup()
                        .addComponent(txtVideoTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtVideoYear, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtVideoType, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(scrEpisodes, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblVideoPosterImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        dlgVideoLayout.setVerticalGroup(
            dlgVideoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgVideoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dlgVideoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblVideoPosterImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(dlgVideoLayout.createSequentialGroup()
                        .addGroup(dlgVideoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(dlgVideoLayout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(dlgVideoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtVideoWatchedDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(chkWatched)))
                            .addGroup(dlgVideoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtVideoTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtVideoYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtVideoType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(scrEpisodes, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("YAMJ Trakt.tv Populator");
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(400, 300));
        setPreferredSize(new java.awt.Dimension(430, 350));
        setResizable(false);

        btnBrowse.setText("Browse");
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        txtCompleteMoviesPath.setEditable(false);
        txtCompleteMoviesPath.setText("Path to CompleteMovies.xml");

        btnLoadFile.setText("Process Complete Movies");
        btnLoadFile.setEnabled(false);
        btnLoadFile.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLoadFile.setMaximumSize(new java.awt.Dimension(250, 25));
        btnLoadFile.setMinimumSize(new java.awt.Dimension(250, 25));
        btnLoadFile.setPreferredSize(new java.awt.Dimension(250, 25));
        btnLoadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadFileActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.setMaximumSize(new java.awt.Dimension(100, 25));
        btnExit.setMinimumSize(new java.awt.Dimension(100, 25));
        btnExit.setPreferredSize(new java.awt.Dimension(100, 25));
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        txtLibraryStats.setEditable(false);
        txtLibraryStats.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtLibraryStats.setText("Select the 'CompleteMovies.xml' file");

        lbllogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbllogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/YAMJ.png"))); // NOI18N

        btnCredentials.setText("Credentials");
        btnCredentials.setMaximumSize(new java.awt.Dimension(100, 25));
        btnCredentials.setMinimumSize(new java.awt.Dimension(100, 25));
        btnCredentials.setPreferredSize(new java.awt.Dimension(100, 25));
        btnCredentials.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCredentialsActionPerformed(evt);
            }
        });

        btnProcess.setText("Process on Trakt");
        btnProcess.setEnabled(false);
        btnProcess.setMaximumSize(new java.awt.Dimension(250, 25));
        btnProcess.setMinimumSize(new java.awt.Dimension(250, 25));
        btnProcess.setPreferredSize(new java.awt.Dimension(250, 25));
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Mark all videos watched");

        mnuFile.setText("File");

        mnuFileCredentials.setText("Credentials");
        mnuFile.add(mnuFileCredentials);
        mnuFile.add(jSeparator1);

        mnuFileExit.setText("Exit");
        mnuFile.add(mnuFileExit);

        mnuBar.add(mnuFile);

        mnuHelp.setText("Help");

        mnuHelpAbout.setText("About");
        mnuHelp.add(mnuHelpAbout);

        mnuHelpDonate.setText("Donate");
        mnuHelp.add(mnuHelpDonate);

        mnuBar.add(mnuHelp);

        setJMenuBar(mnuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtLibraryStats)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(txtCompleteMoviesPath, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnBrowse))
                        .addComponent(lbllogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(btnProcess, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnLoadFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnCredentials, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnExit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbllogo)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCompleteMoviesPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBrowse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtLibraryStats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLoadFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCredentials, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnProcess, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
        fileChooser.setDialogTitle("Locate CompleteMovies.xml");
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setFileFilter(new FileFilterFilename("CompleteMovies.xml"));

        if (StringUtils.isBlank(YamjTraktApp.getLibrary().getPathCompleteMovie())) {
            fileChooser.setCurrentDirectory(new File(DEFAULT_DIRECTORY));
        } else {
            fileChooser.setCurrentDirectory(new File(YamjTraktApp.getLibrary().getPathCompleteMovie()));
        }

        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            YamjTraktApp.getLibrary().setPathCompleteMovie(file.getAbsolutePath());
            txtCompleteMoviesPath.setText(file.getAbsolutePath());
            txtLibraryStats.setText("Please process the file when ready");

            YamjTraktApp.setCompleteMoviesLoaded(Boolean.TRUE);
            YamjTraktApp.setCompleteMoviesProcessed(Boolean.FALSE);

            updateButtons();
        } else {
            System.out.println("File access cancelled by user.");
        }

    }//GEN-LAST:event_btnBrowseActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // Exit the application
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnLoadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadFileActionPerformed

        fraProgress.setVisible(Boolean.TRUE);
        ParseCompleteMovies.setProgressWindow(this);

        // Load the complete movies
        ParseCompleteMovies.parse(YamjTraktApp.getLibrary(), YamjTraktApp.getLibrary().getPathCompleteMovie());

        YamjTraktApp.setCompleteMoviesProcessed(Boolean.TRUE);
        updateButtons();
    }//GEN-LAST:event_btnLoadFileActionPerformed

    private void btnCredTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCredTestActionPerformed
        validateCredentials();
    }//GEN-LAST:event_btnCredTestActionPerformed

    private void btnCredentialsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCredentialsActionPerformed
        dlgCredentials.setVisible(true);
    }//GEN-LAST:event_btnCredentialsActionPerformed

    private void btnCredOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCredOkActionPerformed
        validateCredentials();
        dlgCredentials.setVisible(false);
        updateButtons();
    }//GEN-LAST:event_btnCredOkActionPerformed

    private void btnCredLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCredLoadActionPerformed
        YamjTraktApp.loadCredentials(YamjTraktApp.getCredentials());

        txtCredUsername.setText(YamjTraktApp.getCredentials().getUsername());
        pwdCredPassword.setText(YamjTraktApp.getCredentials().getPassword());
        txtCredApikey.setText(YamjTraktApp.getCredentials().getApikey());

        validateCredentials();
    }//GEN-LAST:event_btnCredLoadActionPerformed

    private void btnCredSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCredSaveActionPerformed
        validateCredentials();
        boolean result = YamjTraktApp.saveCredentials(YamjTraktApp.getCredentials());
        if (result) {
            lblCredResponse.setText("Credentials saved OK");
        } else {
            lblCredResponse.setText("Failed to save the credentials");
        }

    }//GEN-LAST:event_btnCredSaveActionPerformed

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed
        lblProgressTitle.setText("Adding videos to Trakt.tv");
        fraProgress.setVisible(Boolean.TRUE);

        btnProgressOK.setEnabled(Boolean.FALSE);
//        dlgVideo.setVisible(Boolean.TRUE);

        (new Thread() {

            @Override
            public void run() {
                progressClearText();
                int totalToProcess = YamjTraktApp.getLibrary().getNumberMovies() + YamjTraktApp.getLibrary().getNumberTV();
                progressBarLimits(1, totalToProcess);

                progressAddText("Processing Videos on Trakt.tv");
                progressAddText(YamjTraktApp.getLibrary().getStats());

                Map<String, Video> libVids = YamjTraktApp.getLibrary().getVideos();

                int progressCount = 1;
                StringBuilder output;
                for (String videoTitle : libVids.keySet()) {
                    Video video = libVids.get(videoTitle);

                    updateVideoWindow(video);

                    output = new StringBuilder(videoTitle);
                    output.append(" (").append(video.getType()).append(")");
                    output.append(" YAMJ Watched: ").append(video.isWatched());

                    if (video.isMovie()) {
                        Movie movie = TraktTools.getMovieSummary(video);
                        if (movie == null) {
                            output.append((" - Failed to get information"));
                        } else {
                            output.append(" Collection: ").append(movie.inCollection);
                            output.append(" WatchList: ").append(movie.inWatchlist);
                            TraktTools.addSeen(video);
                            TraktTools.addToCollection(video);
                        }
                        progressAddText(output.toString());
                    } else {
                        TvShow tvshow = TraktTools.getTvShowSummary(video);
                        if (tvshow == null) {
                            output.append((" Failed to get information"));
                            progressAddText(output.toString());
                        } else {
                            output.append(" WatchList: ").append(tvshow.inWatchlist);
                            progressAddText(output.toString());
                            for (Episode episode : video.getEpisodes()) {
                                output = new StringBuilder(episode.getSeason() < 10 ? "  S0" : "  S");
                                output.append(episode.getSeason()).append(episode.getEpisode() < 10 ? "E0" : "E").append(episode.getEpisode()).append(") ");
                                TvEntity tve = TraktTools.getEpisodeSummary(video, episode);
                                if (tve == null) {
                                    output.append(video.getTitle()).append(" Episode: ").append(episode.getEpisode()).append(" - Failed to get information");
                                } else {
                                    output.append(tve.episode.title).append(" Watched: ").append(tve.episode.watched);
                                    output.append(" Plays: ").append(tve.episode.plays);
                                }
                                progressAddText(output.toString());
                            }
                            TraktTools.addSeen(video);
                            TraktTools.addToCollection(video);
                        }
                    }
                    progressBarProgress(progressCount++);
                }

                progressAddText("Processed " + --progressCount + " videos.");
                progressAddText("Done!");
                progressAddText("");
                btnProgressOK.setEnabled(Boolean.TRUE);
//                dlgVideo.setVisible(Boolean.FALSE);

            }
        }).start();


    }//GEN-LAST:event_btnProcessActionPerformed

    private void btnProgressOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProgressOKActionPerformed
        updateButtons();
        fraProgress.setVisible(Boolean.FALSE);
        Thread.interrupted();
    }//GEN-LAST:event_btnProgressOKActionPerformed

    private void txtVideoWatchedDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVideoWatchedDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVideoWatchedDateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void windowMain(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowse;
    private javax.swing.JButton btnCredLoad;
    private javax.swing.JButton btnCredOk;
    private javax.swing.JButton btnCredSave;
    private javax.swing.JButton btnCredTest;
    private javax.swing.JButton btnCredentials;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnLoadFile;
    private javax.swing.JButton btnProcess;
    private javax.swing.JButton btnProgressOK;
    private javax.swing.JCheckBox chkWatched;
    private javax.swing.JDialog dlgCredentials;
    private javax.swing.JDialog dlgVideo;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JFrame fraProgress;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel lblCredApikey;
    private javax.swing.JLabel lblCredPassword;
    private javax.swing.JLabel lblCredResponse;
    private javax.swing.JLabel lblCredUsername;
    private javax.swing.JLabel lblCredlogo;
    private javax.swing.JLabel lblProgressTitle;
    private javax.swing.JLabel lblVideoPosterImage;
    private javax.swing.JLabel lbllogo;
    private javax.swing.JMenuBar mnuBar;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenuItem mnuFileCredentials;
    private javax.swing.JMenuItem mnuFileExit;
    private javax.swing.JMenu mnuHelp;
    private javax.swing.JMenuItem mnuHelpAbout;
    private javax.swing.JMenuItem mnuHelpDonate;
    private javax.swing.JProgressBar pbProgress;
    private javax.swing.JPasswordField pwdCredPassword;
    private javax.swing.JScrollPane scrEpisodes;
    private javax.swing.JScrollPane spProgress;
    private javax.swing.JTextArea taProgress;
    private javax.swing.JTable tblEpisodes;
    private javax.swing.JTextField txtCompleteMoviesPath;
    private javax.swing.JTextField txtCredApikey;
    private javax.swing.JTextField txtCredUsername;
    private javax.swing.JTextField txtLibraryStats;
    private javax.swing.JTextField txtVideoTitle;
    private javax.swing.JTextField txtVideoType;
    private javax.swing.JTextField txtVideoWatchedDate;
    private javax.swing.JTextField txtVideoYear;
    // End of variables declaration//GEN-END:variables
}
